"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[9843],{2706:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>C,contentTitle:()=>A,default:()=>S,frontMatter:()=>P,metadata:()=>r,toc:()=>N});const r=JSON.parse('{"id":"Python","title":"Python","description":"Async programming","source":"@site/notes/Python.mdx","sourceDirName":".","slug":"/Python","permalink":"/notes/Python","draft":false,"unlisted":false,"editUrl":"https://github.com/p-s-vishnu/p-s-vishnu.github.io/tree/main/notes/Python.mdx","tags":[{"inline":true,"label":"async","permalink":"/notes/tags/async"},{"inline":true,"label":"python","permalink":"/notes/tags/python"}],"version":"current","frontMatter":{"title":"Python","sidebar_label":"Python","tags":["async","python"]},"sidebar":"tutorialSidebar","previous":{"title":"Translate your site","permalink":"/notes/tutorial-extras/translate-your-site"},"next":{"title":"Paper - Why Language Models Hallucinate","permalink":"/notes/papers/why models hallucinate"}}');var a=t(4848),s=t(8453),i=t(6540),o=t(4164),l=t(3104),c=t(6347),d=t(205),u=t(7485),h=t(1682),p=t(679);function m(e){return i.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function f(e){const{values:n,children:t}=e;return(0,i.useMemo)(()=>{const e=n??function(e){return m(e).map(({props:{value:e,label:n,attributes:t,default:r}})=>({value:e,label:n,attributes:t,default:r}))}(t);return function(e){const n=(0,h.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}function g({value:e,tabValues:n}){return n.some(n=>n.value===e)}function y({queryString:e=!1,groupId:n}){const t=(0,c.W6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,u.aZ)(r),(0,i.useCallback)(e=>{if(!r)return;const n=new URLSearchParams(t.location.search);n.set(r,e),t.replace({...t.location,search:n.toString()})},[r,t])]}function x(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,a=f(e),[s,o]=(0,i.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!g({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find(e=>e.default)??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:a})),[l,c]=y({queryString:t,groupId:r}),[u,h]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,r]=(0,p.Dv)(n);return[t,(0,i.useCallback)(e=>{n&&r.set(e)},[n,r])]}({groupId:r}),m=(()=>{const e=l??u;return g({value:e,tabValues:a})?e:null})();(0,d.A)(()=>{m&&o(m)},[m]);return{selectedValue:s,selectValue:(0,i.useCallback)(e=>{if(!g({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);o(e),c(e),h(e)},[c,h,a]),tabValues:a}}var j=t(2303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v({className:e,block:n,selectedValue:t,selectValue:r,tabValues:s}){const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,l.a_)(),d=e=>{const n=e.currentTarget,a=i.indexOf(n),o=s[a].value;o!==t&&(c(n),r(o))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=i.indexOf(e.currentTarget)+1;n=i[t]??i[0];break}case"ArrowLeft":{const t=i.indexOf(e.currentTarget)-1;n=i[t]??i[i.length-1];break}}n?.focus()};return(0,a.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":n},e),children:s.map(({value:e,label:n,attributes:r})=>(0,a.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{i.push(e)},onKeyDown:u,onClick:d,...r,className:(0,o.A)("tabs__item",b.tabItem,r?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function w({lazy:e,children:n,selectedValue:t}){const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=r.find(e=>e.props.value===t);return e?(0,i.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,a.jsx)("div",{className:"margin-top--md",children:r.map((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function k(e){const n=x(e);return(0,a.jsxs)("div",{className:(0,o.A)("tabs-container",b.tabList),children:[(0,a.jsx)(v,{...n,...e}),(0,a.jsx)(w,{...n,...e})]})}function _(e){const n=(0,j.A)();return(0,a.jsx)(k,{...e,children:m(e.children)},String(n))}const T={tabItem:"tabItem_Ymn6"};function I({children:e,hidden:n,className:t}){return(0,a.jsx)("div",{role:"tabpanel",className:(0,o.A)(T.tabItem,t),hidden:n,children:e})}const P={title:"Python",sidebar_label:"Python",tags:["async","python"]},A=void 0,C={},N=[{value:"Async programming",id:"async-programming",level:2},{value:"Testing",id:"testing",level:2}];function q(e){const n={a:"a",code:"code",em:"em",h2:"h2",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"async-programming",children:"Async programming"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Single thread, concurrent execution, it uses ",(0,a.jsx)(n.strong,{children:"cooperative multitasking"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Coroutines"})," are functions that can be paused and resumed.","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Coroutines are repurposed generators that take advantage of the peculiarities of generator methods."}),"\n",(0,a.jsx)(n.li,{children:"A coroutine is just the very fancy term for the thing returned by an async def function."}),"\n",(0,a.jsxs)(n.li,{children:["Old ",(0,a.jsx)(n.code,{children:"@asyncio.coroutine"})," also exist."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Event loop"})," is the main loop that drives the execution of coroutines.","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"You can think of an event loop as something like a while True loop that monitors coroutines, taking feedback on what\u2019s idle, and looking around for things that can be executed in the meantime. It is able to wake up an idle coroutine when whatever that coroutine is waiting on becomes available."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Tasks"})," are used to schedule ",(0,a.jsx)(n.strong,{children:"coroutines concurrently"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"TaskGroup"})," combines Tasks cleanly."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"asyncio.sleep()"})," is used to stand in for a non-blocking call (but one that also takes some time to complete)"]}),"\n",(0,a.jsxs)(n.li,{children:["A few methods to work it out","\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Method 1: Nonblocking but total time 3 seconds cz they are not started simultaneously."}),"\n",(0,a.jsx)(n.li,{children:"Method 2: Two seconds run using Task."}),"\n",(0,a.jsx)(n.li,{children:"Method 3: Use TaskGroups to implicitly call await."}),"\n",(0,a.jsxs)(n.li,{children:["Method 4: ",(0,a.jsx)(n.code,{children:"asyncio.gather"}),". Gather waits until all the coroutines are completed. However, use ",(0,a.jsx)(n.code,{children:"asyncio.as_completed()"})," to get tasks as they are completed, in the order of completion."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(_,{defaultValue:"method1",values:[{value:"method1",label:"Method 1"},{value:"method2",label:"Method 2"},{value:"method3",label:"Method 3"},{value:"method4",label:"Method 4"}],children:[(0,a.jsx)(I,{value:"method1",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"import time\nimport asyncio\n\nasync def say_after(delay, what):\n    await asyncio.sleep(delay)\n    print(what)\n\nasync def main():\n    print(f\"started at {time.strftime('%X')}\")\n    await say_after(1, 'hello')\n    await say_after(2, 'world')\n    print(f\"finished at {time.strftime('%X')}\")\n\nasyncio.run(main())\n"})})}),(0,a.jsx)(I,{value:"method2",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'async def main():\n    task1 = asyncio.create_task(say_after(1, "hello"))\n    task2 = asyncio.create_task(say_after(2, "world"))\n    print(f"started at {time.strftime(\'%X\')}")\n    await task1\n    await task2\n    print(f"finished at {time.strftime(\'%X\')}")\n'})})}),(0,a.jsx)(I,{value:"method3",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'async def main():\n    async with asyncio.TaskGroup() as tg:\n        tg.create_task(say_after(1, "hello"))\n        tg.create_task(say_after(2, "world"))\n        print(f"started at {time.strftime(\'%X\')}")\n    print(f"finished at {time.strftime(\'%X\')}")\n\n'})})}),(0,a.jsx)(I,{value:"method4",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"async def main():\n\tprint(f\"started at {time.strftime('%X')}\")\n\tawait asyncio.gather(\n\t\tsay_after(1, 'hello'),\n\t\tsay_after(2, 'world'),\n\t)\n\tprint(f\"finished at {time.strftime('%X')}\")\n\nasyncio.run(main())\n"})})})]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Some AIO libs: ",(0,a.jsx)(n.code,{children:"aiohttp aiofiles aiodns"})]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Async IO Design Patterns"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Chaining Coroutines"}),"\n",(0,a.jsx)(n.li,{children:"Using a Queue"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(_,{defaultValue:"pattern1",values:[{value:"pattern1",label:"Pattern 1: Chaining Coroutines"},{value:"pattern2",label:"Pattern 2: Using a Queue"}],children:[(0,a.jsx)(I,{value:"pattern1",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'import time\nimport asyncio\nimport random\n\nasync def step1(n):\n    t = random.randint(0, 10)\n    print(f"  Step 1: {n} waiting {t} seconds")\n    await asyncio.sleep(t)\n    result = f"result{n}-1"\n    # print(f"  Step 1: {n} | Returning ==> {result}.")\n    return result\n\nasync def step2(n, arg):\n\tt = random.randint(0, 10)\n\tprint(f"     Step 2: {n} waiting {t} seconds")\n\tawait asyncio.sleep(t)\n\tresult = f"result{n}-2 derived from {arg}"\n\t# print(f"    Step 2: {n} | Returning == {result}.")\n\treturn result\n\nasync def chain(n):\n\tstart = time.perf_counter()\n\tvalue1 = await step1(n)\n\tvalue2 = await step2(n, value1)\n\tend = time.perf_counter()\n\tprint(f"> Chained result {n} took {end - start} seconds.")\n\treturn value2\n\nasync def main():\n    start = time.perf_counter()\n    values = await asyncio.gather(*[chain(n) for n in [3, 6, 9]])\n    end = time.perf_counter()\n    print("-------")\n    print(f"Total time: {end - start} seconds")\n    print(values)\n\nasyncio.run(main())\n\n'})})}),(0,a.jsxs)(I,{value:"pattern2",children:[(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'import asyncio\nimport itertools as it\nimport os\nimport random\nimport time\n\nasync def makeitem(size: int = 5) -> str:\n    return os.urandom(size).hex()\n\nasync def randsleep(caller=None) -> None:\n    i = random.randint(0, 10)\n    if caller:\n        print(f"{caller} sleeping for {i} seconds.")\n    await asyncio.sleep(i)\n\nasync def produce(name: int, q: asyncio.Queue) -> None:\n    n = random.randint(0, 10)\n    for _ in it.repeat(None, n):  # Synchronous loop for each single producer\n        await randsleep(caller=f"Producer {name}")\n        i = await makeitem()\n        t = time.perf_counter()\n        await q.put((i, t))\n        print(f"Producer {name} added <{i}> to queue.")\n\nasync def consume(name: int, q: asyncio.Queue) -> None:\n    while True:\n        await randsleep(caller=f"Consumer {name}")\n        i, t = await q.get()\n        now = time.perf_counter()\n        print(f"Consumer {name} got element <{i}>"\n              f" in {now-t:0.5f} seconds.")\n        q.task_done()\n\nasync def main(nprod: int, ncon: int):\n    q = asyncio.Queue()\n    producers = [asyncio.create_task(produce(n, q)) for n in range(nprod)]\n    consumers = [asyncio.create_task(consume(n, q)) for n in range(ncon)]\n    # highlight-start\n    await asyncio.gather(*producers)\n    await q.join() \n    # highlight-end\n    for c in consumers:\n        c.cancel()\n\nif __name__ == "__main__":\n    import argparse\n    random.seed(444)\n    parser = argparse.ArgumentParser()\n    parser.add_argument("-p", "--nprod", type=int, default=5)\n    parser.add_argument("-c", "--ncon", type=int, default=10)\n    ns = parser.parse_args()\n    start = time.perf_counter()\n    asyncio.run(main(**ns.__dict__))\n    elapsed = time.perf_counter() - start\n    print(f"Program completed in {elapsed:0.5f} seconds.")\n'})}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Consumer Initiation"}),": Consumers are initiated by ",(0,a.jsx)(n.code,{children:"consumers = [asyncio.create_task(consume(n, q)) for n in range(ncon)]"}),". The ",(0,a.jsx)(n.code,{children:"asyncio.create_task()"})," function schedules the ",(0,a.jsx)(n.code,{children:"consume"})," coroutine to run on the event loop immediately and concurrently. You do not ",(0,a.jsx)(n.code,{children:"await"})," ",(0,a.jsx)(n.code,{children:"create_task()"})," because it returns a ",(0,a.jsx)(n.code,{children:"Task"})," object right away; ",(0,a.jsx)(n.code,{children:"await"})," is used to wait for the ",(0,a.jsx)(n.em,{children:"completion"})," of a task or coroutine, not its initiation."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Producer Completion"}),": ",(0,a.jsx)(n.code,{children:"await asyncio.gather(*producers)"})," ensures that the ",(0,a.jsx)(n.code,{children:"main"})," function waits until all producer tasks have completed adding items to the queue."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Queue Synchronization"}),": ",(0,a.jsx)(n.code,{children:"await q.join()"})," is vital; it ensures that ",(0,a.jsx)(n.code,{children:"main"})," waits until all items added to the queue by producers have been received and processed by consumers, with each ",(0,a.jsx)(n.code,{children:"q.task_done()"})," call decrementing the count of unfinished tasks. This guarantees that all producer-generated work is fully handled before the program proceeds."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Consumer Cancellation"}),": ",(0,a.jsx)(n.code,{children:"for c in consumers: c.cancel()"})," is necessary to gracefully stop the consumer tasks, as they run in an infinite ",(0,a.jsx)(n.code,{children:"while True"})," loop and would otherwise continue indefinitely, even after all items are processed."]}),"\n"]})]})]}),"\n",(0,a.jsxs)(n.p,{children:["Neither ",(0,a.jsx)(n.strong,{children:"asynchronous generators"})," nor ",(0,a.jsx)(n.strong,{children:"comprehensions"})," make the iteration concurrent."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'async def mygen(u: int = 10):\n    """Yield powers of 2."""\n    i = 0\n    while i < u:\n        # highlight-start\n        yield 2 ** i\n        # highlight-end\n        i += 1\n        await asyncio.sleep(0.1)\n\nasync def main():\n    # This does *not* introduce concurrent execution\n    # It is meant to show syntax only\n    # highlight-start\n    g = [i async for i in mygen()]\n    f = [j async for j in mygen() if not (j // 3 % 5)]\n    # highlight-end\n    return g, f\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"References"})}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://docs.python.org/3/library/asyncio.html",children:"Python Async documentation"}),", ",(0,a.jsx)(n.a,{href:"https://docs.python.org/3/library/asyncio-task.html#coroutine",children:"Coroutines"})]}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://realpython.com/async-io-python/",children:"Async Python"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://fastapi.tiangolo.com/async/",children:"FastAPI Async"})}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,a.jsx)(n.p,{children:"Types of Testing"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Unit Testing"}),"\n",(0,a.jsx)(n.li,{children:"Integration Testing"}),"\n",(0,a.jsx)(n.li,{children:"System Testing"}),"\n",(0,a.jsx)(n.li,{children:"Acceptance Testing"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"References"})}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://madewithml.com/courses/mlops/testing/",children:"Made with ML testing"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://pyimagesearch.com/2024/11/04/enhancing-github-actions-ci-for-fastapi-build-test-and-publish/",children:"Pytest CI"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://fastapi.tiangolo.com/tutorial/testing/",children:"Fast API"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://fastapi.tiangolo.com/tutorial/bigger-applications/",children:"Fast API file structure"})}),"\n",(0,a.jsx)(n.li,{children:"fastapi pytest github template."}),"\n"]})]})}function S(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(q,{...e})}):q(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var r=t(6540);const a={},s=r.createContext(a);function i(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);